{"timestamp":"2025-08-14T02:10:29.998309","level":"info","event":"DAG bundles loaded: dags-folder, example_dags","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager"}
{"timestamp":"2025-08-14T02:10:29.999047","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/branching_dynamic_dag.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-08-14T02:10:30.674241Z","level":"info","event":"Task instance is in running state","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-14T02:10:30.675212Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.QUEUED","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-14T02:10:30.676209Z","level":"info","event":"Current task name:branch_task","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-14T02:10:30.676947Z","level":"info","event":"Dag name:branching_dynamic_dag","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-14T02:10:30.675446","level":"info","event":"Done. Returned value was: weekday_task","logger":"airflow.task.operators.airflow.providers.standard.operators.python.BranchPythonOperator"}
{"timestamp":"2025-08-14T02:10:30.675581","level":"info","event":"Branch into weekday_task","logger":"airflow.task.operators.airflow.providers.standard.operators.python.BranchPythonOperator"}
{"timestamp":"2025-08-14T02:10:30.676166","level":"info","event":"Following branch {'weekday_task'}","logger":"airflow.task.operators.airflow.providers.standard.operators.python.BranchPythonOperator"}
{"timestamp":"2025-08-14T02:10:30.676727","level":"info","event":"Skipping tasks [('weekend_task', -1)]","logger":"airflow.task.operators.airflow.providers.standard.operators.python.BranchPythonOperator"}
{"timestamp":"2025-08-14T02:10:30.700370","level":"info","event":"Skipping downstream tasks.","logger":"task"}
{"timestamp":"2025-08-14T02:10:30.753449Z","level":"info","event":"Task instance in success state","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-14T02:10:30.753764Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.RUNNING","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-14T02:10:30.754038Z","level":"info","event":"Task operator:<Task(BranchPythonOperator): branch_task>","chan":"stdout","logger":"task"}
