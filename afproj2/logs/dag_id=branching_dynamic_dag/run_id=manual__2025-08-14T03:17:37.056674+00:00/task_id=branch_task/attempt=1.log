{"timestamp":"2025-08-14T03:17:39.357756","level":"info","event":"DAG bundles loaded: dags-folder, example_dags","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager"}
{"timestamp":"2025-08-14T03:17:39.358339","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/branching_dynamic_dag.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-08-14T03:17:39.610979Z","level":"info","event":"Task instance is in running state","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-14T03:17:39.612117Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.QUEUED","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-14T03:17:39.612410Z","level":"info","event":"Current task name:branch_task","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-14T03:17:39.612651Z","level":"info","event":"Dag name:branching_dynamic_dag","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-14T03:17:39.610634","level":"info","event":"Done. Returned value was: weekday_task","logger":"airflow.task.operators.airflow.providers.standard.operators.python.BranchPythonOperator"}
{"timestamp":"2025-08-14T03:17:39.610766","level":"info","event":"Branch into weekday_task","logger":"airflow.task.operators.airflow.providers.standard.operators.python.BranchPythonOperator"}
{"timestamp":"2025-08-14T03:17:39.611413","level":"info","event":"Following branch {'weekday_task'}","logger":"airflow.task.operators.airflow.providers.standard.operators.python.BranchPythonOperator"}
{"timestamp":"2025-08-14T03:17:39.611864","level":"info","event":"Skipping tasks [('weekend_task', -1)]","logger":"airflow.task.operators.airflow.providers.standard.operators.python.BranchPythonOperator"}
{"timestamp":"2025-08-14T03:17:39.627287","level":"info","event":"Skipping downstream tasks.","logger":"task"}
{"timestamp":"2025-08-14T03:17:39.661905Z","level":"info","event":"Task instance in success state","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-14T03:17:39.662204Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.RUNNING","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-14T03:17:39.662454Z","level":"info","event":"Task operator:<Task(BranchPythonOperator): branch_task>","chan":"stdout","logger":"task"}
